// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Website.Data;

namespace Website.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "3.0.0-preview3.19153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Website.Models.Isaac.Description", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IsaacResourceId");

                    b.Property<string>("Text");

                    b.Property<int>("ValidFor");

                    b.HasKey("Id");

                    b.HasIndex("IsaacResourceId");

                    b.ToTable("Description");
                });

            modelBuilder.Entity("Website.Models.Isaac.GameplayEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EventType");

                    b.Property<int?>("SubmittedEpisodeId");

                    b.HasKey("Id");

                    b.HasIndex("SubmittedEpisodeId");

                    b.ToTable("GameplayEvent");
                });

            modelBuilder.Entity("Website.Models.Isaac.IsaacResource", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AvailableIn");

                    b.Property<string>("ChallengeSpecificId");

                    b.Property<string>("Color");

                    b.Property<int>("ExistsIn");

                    b.Property<int?>("FromModId");

                    b.Property<int?>("GameplayEventId");

                    b.Property<string>("Name");

                    b.Property<int>("Type");

                    b.Property<int>("X");

                    b.Property<int>("Y");

                    b.HasKey("Id");

                    b.HasIndex("ChallengeSpecificId");

                    b.HasIndex("FromModId");

                    b.HasIndex("GameplayEventId");

                    b.ToTable("IsaacResources");
                });

            modelBuilder.Entity("Website.Models.Isaac.IsaacResourceTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Effect");

                    b.Property<string>("IsaacResourceId");

                    b.HasKey("Id");

                    b.HasIndex("IsaacResourceId");

                    b.ToTable("IsaacEffects");
                });

            modelBuilder.Entity("Website.Models.Isaac.Mod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Mods");
                });

            modelBuilder.Entity("Website.Models.Isaac.ModUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LinkText");

                    b.Property<int?>("ModId");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("ModId");

                    b.ToTable("ModUrl");
                });

            modelBuilder.Entity("Website.Models.Isaac.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("Contributor");

                    b.Property<string>("QuoteText");

                    b.Property<int>("SecondsIn");

                    b.Property<DateTime>("SubmissionTime");

                    b.Property<string>("VideoId");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("Website.Models.Isaac.SubmittedEpisode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ContributedAt");

                    b.Property<Guid>("Contributor");

                    b.Property<string>("VideoId");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.ToTable("SubmittedEpisode");
                });

            modelBuilder.Entity("Website.Models.Isaac.SubmittedEpisodeFlag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("FlagTime");

                    b.Property<Guid>("FlaggedBy");

                    b.Property<int>("Reason");

                    b.Property<int?>("SubmittedEpisodeId");

                    b.HasKey("Id");

                    b.HasIndex("SubmittedEpisodeId");

                    b.ToTable("SubmittedEpisodeFlag");
                });

            modelBuilder.Entity("Website.Models.Isaac.Thumbnail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Height");

                    b.Property<string>("Type");

                    b.Property<string>("Url");

                    b.Property<string>("VideoId");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.ToTable("Thumbnail");
                });

            modelBuilder.Entity("Website.Models.Isaac.Video", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CommentCount");

                    b.Property<int>("Dislikes");

                    b.Property<TimeSpan>("Duration");

                    b.Property<int>("FavouriteCount");

                    b.Property<int>("Likes");

                    b.Property<DateTime>("Published");

                    b.Property<bool>("RequiresUpdate");

                    b.Property<string>("Title");

                    b.Property<int>("ViewCount");

                    b.HasKey("Id");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("Website.Models.Isaac.Description", b =>
                {
                    b.HasOne("Website.Models.Isaac.IsaacResource")
                        .WithMany("Descriptions")
                        .HasForeignKey("IsaacResourceId");
                });

            modelBuilder.Entity("Website.Models.Isaac.GameplayEvent", b =>
                {
                    b.HasOne("Website.Models.Isaac.SubmittedEpisode")
                        .WithMany("EverythingThatHappened")
                        .HasForeignKey("SubmittedEpisodeId");
                });

            modelBuilder.Entity("Website.Models.Isaac.IsaacResource", b =>
                {
                    b.HasOne("Website.Models.Isaac.IsaacResource", "ChallengeSpecific")
                        .WithMany()
                        .HasForeignKey("ChallengeSpecificId");

                    b.HasOne("Website.Models.Isaac.Mod", "FromMod")
                        .WithMany()
                        .HasForeignKey("FromModId");

                    b.HasOne("Website.Models.Isaac.GameplayEvent")
                        .WithMany("Resources")
                        .HasForeignKey("GameplayEventId");
                });

            modelBuilder.Entity("Website.Models.Isaac.IsaacResourceTag", b =>
                {
                    b.HasOne("Website.Models.Isaac.IsaacResource")
                        .WithMany("Tags")
                        .HasForeignKey("IsaacResourceId");
                });

            modelBuilder.Entity("Website.Models.Isaac.ModUrl", b =>
                {
                    b.HasOne("Website.Models.Isaac.Mod")
                        .WithMany("ModUrls")
                        .HasForeignKey("ModId");
                });

            modelBuilder.Entity("Website.Models.Isaac.Quote", b =>
                {
                    b.HasOne("Website.Models.Isaac.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId");
                });

            modelBuilder.Entity("Website.Models.Isaac.SubmittedEpisode", b =>
                {
                    b.HasOne("Website.Models.Isaac.Video", "Video")
                        .WithMany("Submissions")
                        .HasForeignKey("VideoId");
                });

            modelBuilder.Entity("Website.Models.Isaac.SubmittedEpisodeFlag", b =>
                {
                    b.HasOne("Website.Models.Isaac.SubmittedEpisode")
                        .WithMany("Flags")
                        .HasForeignKey("SubmittedEpisodeId");
                });

            modelBuilder.Entity("Website.Models.Isaac.Thumbnail", b =>
                {
                    b.HasOne("Website.Models.Isaac.Video")
                        .WithMany("Thumbnails")
                        .HasForeignKey("VideoId");
                });
#pragma warning restore 612, 618
        }
    }
}
